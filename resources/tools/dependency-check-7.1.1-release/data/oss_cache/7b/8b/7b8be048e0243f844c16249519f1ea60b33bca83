{"coordinates":"pkg:npm/npm@3.10.10","description":"a package manager for JavaScript","reference":"https://ossindex.sonatype.org/component/pkg:npm/npm@3.10.10?utm_source\u003ddependency-check\u0026utm_medium\u003dintegration\u0026utm_content\u003d7.1.1","vulnerabilities":[{"id":"CVE-2019-16776","displayName":"CVE-2019-16776","title":"[CVE-2019-16776] CWE-22: Improper Limitation of a Pathname to a Restricted Directory (\u0027Path Traversal\u0027)","description":"Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended node_modules folder through the bin field. A properly constructed entry in the package.json bin field would allow a package publisher to modify and/or gain access to arbitrary files on a user\u0027s system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.","cvssScore":8.1,"cvssVector":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N","cwe":"CWE-22","cve":"CVE-2019-16776","reference":"https://ossindex.sonatype.org/vulnerability/CVE-2019-16776?component-type\u003dnpm\u0026component-name\u003dnpm\u0026utm_source\u003ddependency-check\u0026utm_medium\u003dintegration\u0026utm_content\u003d7.1.1","externalReferences":["http://web.nvd.nist.gov/view/vuln/detail?vulnId\u003dCVE-2019-16776","https://blog.npmjs.org/post/189618601100/binary-planting-with-the-npm-cli","https://github.com/npm/cli/pull/577","https://www.npmjs.com/advisories/1427","https://www.npmjs.com/advisories/1434","https://blog.daniel-ruf.de/critical-design-flaw-npm-pnpm-yarn/"]},{"id":"CVE-2019-16775","displayName":"CVE-2019-16775","title":"[CVE-2019-16775] CWE-61: UNIX Symbolic Link (Symlink) Following","description":"Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It is possible for packages to create symlinks to files outside of thenode_modules folder through the bin field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user\u0027s system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.","cvssScore":6.5,"cvssVector":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N","cwe":"CWE-61","cve":"CVE-2019-16775","reference":"https://ossindex.sonatype.org/vulnerability/CVE-2019-16775?component-type\u003dnpm\u0026component-name\u003dnpm\u0026utm_source\u003ddependency-check\u0026utm_medium\u003dintegration\u0026utm_content\u003d7.1.1","externalReferences":["http://web.nvd.nist.gov/view/vuln/detail?vulnId\u003dCVE-2019-16775","https://blog.npmjs.org/post/189618601100/binary-planting-with-the-npm-cli","https://github.com/npm/cli/pull/577","https://www.npmjs.com/advisories/1435","https://www.npmjs.com/advisories/1436","https://blog.daniel-ruf.de/critical-design-flaw-npm-pnpm-yarn/"]},{"id":"CVE-2019-16777","displayName":"CVE-2019-16777","title":"[CVE-2019-16777] CWE-269: Improper Privilege Management","description":"Versions of the npm CLI prior to 6.13.4 are vulnerable to an Arbitrary File Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. For example, if a package was installed globally and created a serve binary, any subsequent installs of packages that also create a serve binary would overwrite the previous serve binary. This behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.","cvssScore":6.5,"cvssVector":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N","cwe":"CWE-269","cve":"CVE-2019-16777","reference":"https://ossindex.sonatype.org/vulnerability/CVE-2019-16777?component-type\u003dnpm\u0026component-name\u003dnpm\u0026utm_source\u003ddependency-check\u0026utm_medium\u003dintegration\u0026utm_content\u003d7.1.1","externalReferences":["http://web.nvd.nist.gov/view/vuln/detail?vulnId\u003dCVE-2019-16777","https://blog.daniel-ruf.de/critical-design-flaw-npm-pnpm-yarn/","https://github.com/npm/bin-links/pull/12","https://github.com/npm/cli/security/advisories/GHSA-4328-8hgf-7wjr","https://www.npmjs.com/advisories/1437"]},{"id":"CVE-2020-15095","displayName":"CVE-2020-15095","title":"[CVE-2020-15095] CWE-532: Information Exposure Through Log Files","description":"Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like \"\u003cprotocol\u003e://[\u003cuser\u003e[:\u003cpassword\u003e]@]\u003chostname\u003e[:\u003cport\u003e][:][/]\u003cpath\u003e\". The password value is not redacted and is printed to stdout and also to any generated log files.","cvssScore":4.4,"cvssVector":"CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:H/I:N/A:N","cwe":"CWE-532","cve":"CVE-2020-15095","reference":"https://ossindex.sonatype.org/vulnerability/CVE-2020-15095?component-type\u003dnpm\u0026component-name\u003dnpm\u0026utm_source\u003ddependency-check\u0026utm_medium\u003dintegration\u0026utm_content\u003d7.1.1","externalReferences":["http://web.nvd.nist.gov/view/vuln/detail?vulnId\u003dCVE-2020-15095","https://github.com/npm/cli/blob/66aab417f836a901f8afb265251f761bb0422463/CHANGELOG.md#6146-2020-07-07","https://github.com/npm/cli/security/advisories/GHSA-93f3-23rq-pjfp","https://www.npmjs.com/advisories/1543"]}]}